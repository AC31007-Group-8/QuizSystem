// Quiz System build file

plugins {
  id 'war'
  id 'application'
  id 'idea'
  id 'eclipse'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
  id 'org.akhikhl.gretty' version '1.4.0'
  id 'nu.studer.jooq' version '2.0.2'
}

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'com.github.ac31007_group_8.quiz'
version = '0.0.1'
mainClassName = 'com.github.ac31007_group_8.quiz.init.Main'

jooq {
    Properties props = new Properties()
    def filePath = "config.properties"
    if (project.hasProperty("CONFIG_PATH")) filePath = CONFIG_PATH
    if (file(filePath).exists()) {
        props.load(new FileInputStream(filePath))
    }

    def DB_HOST = props.getProperty("DATABASE_HOST", "localhost")
    def DB_PORT = props.getProperty("DATABASE_PORT", "3306")
    def DB_SCHEMA = props.getProperty("DATABASE_SCHEMA", "quizsystem")
    def DB_USER = props.getProperty("DATABASE_USER")
    def DB_PASSWORD = props.getProperty("DATABASE_PASSWORD")

    if (DB_USER == null || DB_PASSWORD == null) {
        throw new RuntimeException("No database user or password in $filePath - fix that and re-run.")
    }

    database(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = "jdbc:mysql://$DB_HOST:$DB_PORT/$DB_SCHEMA"
            user = DB_USER
            password = DB_PASSWORD
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {}
            database {
                name = 'org.jooq.util.mysql.MySQLDatabase'
                inputSchema = DB_SCHEMA
            }
            generate {
                pojos = true
                daos = true
                pojosEqualsAndHashCode = true
                fluentSetters = true
            }
            target {
                packageName = 'com.github.ac31007_group_8.quiz.generated'
            }
        }
    }
}

task setup(dependsOn: generateDatabaseJooqSchemaSource) {}
tasks.eclipse.dependsOn setup

configurations {
    ideaCompile
}

dependencies {
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'
    ideaCompile files('libs/javax.servlet-api-3.1.0.jar')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.5.5'
    compile group: 'com.sparkjava', name: 'spark-template-mustache', version: '2.5.5'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.13'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
    compile group: 'org.jooq', name: 'jooq'
    compile group: 'org.jooq', name: 'jooq-meta'
    compile group: 'org.jooq', name: 'jooq-codegen'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.12'
    jooqRuntime group: 'mysql', name: 'mysql-connector-java', version: '5.1.12'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

idea {
    module {
        scopes.COMPILE.plus += [ configurations.ideaCompile ]
    }
}

gretty {
  servletContainer = 'tomcat8'
}

